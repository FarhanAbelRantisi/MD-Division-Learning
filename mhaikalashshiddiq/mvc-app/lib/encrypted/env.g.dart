// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// FlutterSecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    149,
    184,
    8,
    82,
    79,
    115,
    38,
    212,
    23,
    51,
    154,
    101,
    128,
    20,
    245,
    136,
    145,
    82,
    88,
    252,
    112,
    193,
    201,
    94,
    10,
    9,
    178,
    128,
    213,
    125,
    115,
    62,
    162,
    22,
    205,
    182,
    116,
    42,
    41,
    158,
    244,
    105,
    181,
    192,
    232,
    51,
    184,
    131,
    57,
    104,
    162,
    96,
    102,
    40,
    191,
    140,
    236,
    107,
    161,
    135,
    53,
    232,
    194,
    106,
    198,
    226,
    64,
    166,
    78,
    225,
    15,
    48,
    123,
    196,
    67,
    40,
    212,
    82,
    84,
    134,
    156,
    136,
    141,
    68,
    59,
    165,
    149,
    130,
    233,
    145,
    203,
    12,
    61,
    55,
    91,
    215,
    152,
    75,
    102,
    255,
    102,
    135,
    171,
    146,
    232,
    133,
    218,
    179,
    219,
    67,
    3,
    156,
    183,
    211,
    170,
    170,
    142,
    57,
    144,
    68,
    106,
    139,
    70,
    70,
    255,
    122,
    195,
    154,
    213,
    217,
    212,
    17,
    1,
    205,
    153,
    118,
    144,
    19,
    11,
    23,
    121,
    147,
    141,
    147,
    105,
    162,
    121,
    73,
    97,
    20,
    51,
    112,
    179,
    177,
    238,
    146,
    71,
    206,
    104,
    253,
    67,
    119,
    186,
    175,
    194,
    241,
    41,
    1,
    16,
    82,
    78,
    119,
    77,
    202,
    158,
    20,
    183,
    255,
    199,
    210,
    247,
    112,
    81,
    8,
    138,
    18,
    129,
    117,
    203,
    59,
    148,
    4,
    147,
    108,
    92,
    67,
    104,
    177,
    83,
    149,
    213,
    237,
    178,
    65,
    59,
    234,
    78,
    194,
    132,
    1,
    170,
    51,
    195,
    227,
    237,
    248,
    178,
    199,
    69,
    80,
    28,
    70,
    208,
    219,
    140,
    41,
    149,
    5,
    21,
    75,
    11,
    206,
    107,
    181,
    85,
    254,
    232,
    206,
    228,
    89,
    246,
    63,
    44,
    223,
    89,
    229,
    246,
    116,
    145,
    177,
    155,
    8,
    158,
    195,
    195,
    158,
    104,
    155,
    175,
    73,
    52,
    32,
    169,
    1,
    57,
    202,
    60,
    97,
    236,
    183,
    28,
    178,
    53,
    16,
    92,
    222,
    244,
    120,
    42,
    241,
    66,
    35,
    174,
    42,
    97,
    239,
    14,
    158,
    113,
    73,
    15,
    183,
    169,
    198,
    26,
    159,
    156,
    159,
    154,
    37,
    207,
    180,
    123,
    76,
    128,
    165,
    200,
    139,
    63,
    162,
    34,
    215,
    141,
    246,
    35,
    31,
    131,
    185,
    172,
    48,
    239,
    134,
    137,
    32,
    83,
    120,
    44,
    65,
    6,
    182,
    78,
    224,
    197,
    85,
    162,
    188,
    158,
    40,
    105,
    11,
    28,
    139,
    50,
    243,
    218,
    133,
    18,
    131,
    77,
    49,
    4,
    83,
    11,
    93,
    91,
    77,
    104,
    7,
    102,
    238,
    69,
    207,
    237,
    24,
    109,
    242,
    51,
    123,
    73,
    228,
    5,
    214,
    25,
    221,
    70,
    42,
    7,
    252,
    252,
    182,
    104,
    234,
    6,
    41,
    72,
    144,
    104,
    150,
    119,
    98,
    175,
    203,
    62,
    153,
    142,
    121,
    229,
    77,
    152,
    139,
    63,
    97,
    81,
    49,
    164,
    184,
    46,
    215,
    60,
    140,
    225,
    38,
    191,
    229,
    179,
    58,
    61,
    133,
    158,
    158,
    142,
    121,
    234,
    118,
    33,
    79,
    250,
    36,
    176,
    137,
    83,
    127,
    118,
    73,
    118,
    213,
    72,
    177,
    80,
    93,
    122,
    228,
    0,
    19,
    13,
    183,
    47,
    104
  ]);
  @override
  String get firebaseAndroidApiKey => _get('FIREBASE_ANDROID_API_KEY');

  @override
  String get firebaseAndroidAppId => _get('FIREBASE_ANDROID_APP_ID');

  @override
  String get firebaseAndroidMessagingSenderId =>
      _get('FIREBASE_ANDROID_MESSAGING_SENDER_ID');

  @override
  String get firebaseAndroidProjectId => _get('FIREBASE_ANDROID_PROJECT_ID');

  @override
  String get firebaseAndroidStorageBucket =>
      _get('FIREBASE_ANDROID_STORAGE_BUCKET');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncrypter.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncrypter.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return parseValue(decryptedValue);
  }
}
